"""initial migration

Revision ID: 91967ee02dc6
Revises:
Create Date: 2022-11-21 15:01:41.380299

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "91967ee02dc6"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.execute(sa.schema.CreateSchema("wefusion"))

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("second_name", sa.String(length=50), nullable=True),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("password_hash", sa.String(length=64), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__user__id")),
        sa.UniqueConstraint("email", name=op.f("uq__user__email")),
        sa.UniqueConstraint("username", name=op.f("uq__user__username")),
        schema="wefusion",
    )
    op.create_table(
        "exec_task",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("payload", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["wefusion.user.id"], name=op.f("fk__exec_task__user__user_id")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__exec_task__id")),
        schema="wefusion",
    )
    op.create_table(
        "artifact",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("exec_task_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["exec_task_id"],
            ["wefusion.exec_task.id"],
            name=op.f("fk__artifact__exec_task__exec_task_id"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["wefusion.user.id"], name=op.f("fk__artifact__user__user_id")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__artifact__id")),
        schema="wefusion",
    )
    op.create_table(
        "exec_task_status",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("exec_task_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["exec_task_id"],
            ["wefusion.exec_task.id"],
            name=op.f("fk__exec_task_status__exec_task__exec_task_id"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__exec_task_status__id")),
        schema="wefusion",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("exec_task_status", schema="wefusion")
    op.drop_table("artifact", schema="wefusion")
    op.drop_table("exec_task", schema="wefusion")
    op.drop_table("user", schema="wefusion")
    # ### end Alembic commands ###

    op.execute(sa.schema.DropSchema("wefusion"))
